"""empty message

Revision ID: a9b81f4cb06e
Revises: 
Create Date: 2022-03-25 07:11:14.424887

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9b81f4cb06e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('avatar', sa.String(length=128), nullable=True),
    sa.Column('header', sa.String(length=128), nullable=True),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.Column('gender', sa.String(length=140), nullable=True),
    sa.Column('location', sa.String(length=140), nullable=True),
    sa.Column('date_of_birth', sa.String(length=140), nullable=True),
    sa.Column('twitter', sa.String(length=140), nullable=True),
    sa.Column('instagram', sa.String(length=140), nullable=True),
    sa.Column('facebook', sa.String(length=140), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], )
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=360), nullable=True),
    sa.Column('image', sa.String(length=360), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=360), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('liked_by_user', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_timestamp'), 'post', ['timestamp'], unique=False)
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=360), nullable=True),
    sa.Column('timestamps', sa.DateTime(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=360), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('liked_by_user', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_timestamps'), 'comment', ['timestamps'], unique=False)
    op.create_table('likedPosts',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('liker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['liker_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], )
    )
    op.create_table('notInterested',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], )
    )
    op.create_table('reportedPost',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], )
    )
    op.create_table('childcomment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=360), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('timestamps', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=360), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('liked_by_user', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_childcomment_timestamps'), 'childcomment', ['timestamps'], unique=False)
    op.create_table('likedComments',
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('liker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['liker_id'], ['user.id'], )
    )
    op.create_table('likedChildComments',
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('liker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['childcomment.id'], ),
    sa.ForeignKeyConstraint(['liker_id'], ['user.id'], )
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamps', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=360), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('child_comment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_comment_id'], ['childcomment.id'], ),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_timestamps'), 'notification', ['timestamps'], unique=False)
    op.create_table('childCommentNotification',
    sa.Column('not_id', sa.Integer(), nullable=True),
    sa.Column('child_commnt_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_commnt_id'], ['childcomment.id'], ),
    sa.ForeignKeyConstraint(['not_id'], ['notification.id'], )
    )
    op.create_table('commentNotification',
    sa.Column('not_id', sa.Integer(), nullable=True),
    sa.Column('commnt_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['commnt_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['not_id'], ['notification.id'], )
    )
    op.create_table('postNotification',
    sa.Column('not_id', sa.Integer(), nullable=True),
    sa.Column('posts_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['not_id'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['posts_id'], ['post.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('postNotification')
    op.drop_table('commentNotification')
    op.drop_table('childCommentNotification')
    op.drop_index(op.f('ix_notification_timestamps'), table_name='notification')
    op.drop_table('notification')
    op.drop_table('likedChildComments')
    op.drop_table('likedComments')
    op.drop_index(op.f('ix_childcomment_timestamps'), table_name='childcomment')
    op.drop_table('childcomment')
    op.drop_table('reportedPost')
    op.drop_table('notInterested')
    op.drop_table('likedPosts')
    op.drop_index(op.f('ix_comment_timestamps'), table_name='comment')
    op.drop_table('comment')
    op.drop_index(op.f('ix_post_timestamp'), table_name='post')
    op.drop_table('post')
    op.drop_table('followers')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
